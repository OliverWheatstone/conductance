// Default conductance configuration

var assert = require('sjs:assert');
var logging = require('sjs:logging');
var server = require('mho:server');

//----------------------------------------------------------------------
// server main function, used by `conductance run`
exports.run = function() {
  arguments.length .. assert.eq(0, "Too many arguments");
  var { readFile } = require('sjs:nodejs/fs');
  var { conductanceRoot } = require('mho:server/env');
  var { Port } = server;
  var { SystemRoutes, ExecutableDirectory, LogRequests, DeveloperMode } = require('mho:server/routes');


  var routes = [
        SystemRoutes(),
        ExecutableDirectory(process.cwd()),
      ] .. LogRequests(logging.INFO);

  if (process.env['NODE_ENV'] !== 'production') {
    routes = routes .. DeveloperMode();
  }

  server.run([
    {
      address: Port(7075),
      routes: routes,
    },
    {
      address: Port(7076).ssl({
        key: readFile("#{conductanceRoot()}ssl/insecure-localhost.key"),
        cert: readFile("#{conductanceRoot()}ssl/insecure-localhost.crt")
      }),
      routes: routes
    },
  ]);
};

exports.systemd = function() {
  var systemd = require('mho:server/systemd');
  var url = require('sjs:url');
  return {
    master: {
      Service: {
        Restart: 'always',
        User: 'conductance',
        Group: 'conductance',
        Environment: {'NODE_ENV': 'production'},
        ExecStart: systemd.ConductanceArgs.concat('run', module.id .. url.toPath),
      },
      // use socket activation
      Socket: {
        Listen: ports,
      },
    }
  }
};
