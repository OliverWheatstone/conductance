var { ownValues, get } = require('sjs:object');
var { at } = require('sjs:sequence');
var logging = require('sjs:logging');
var {collapseHtmlFragment} = require('mho:surface/html');
var {Widget, Style, Document} = require('mho:surface');

var templates = {
	script: v -> Widget("script", "window.injected = #{v};", {"id":"content"}),
	scriptQuasi: v -> Widget("script", `window.injected = ${v};`, {"id":"content"}),
	div:    v -> `<div id="content">$v</div>`,
	pre:    v -> `<pre id="content">$v</pre>`,
};

exports.content = function(pars) {
	var name = pars .. get('template');
	var value = pars .. get('value');
	var result;
	switch(name) {
		case 'style':
			result = Document(Widget("div", "styled", {"id":"content"}) .. Style(value));
			break;
		default:
			var tmpl = templates .. get(name);
			result = collapseHtmlFragment(tmpl(value)).getHtml();
			break;
	}
	return result;
}
