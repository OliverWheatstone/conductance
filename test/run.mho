#!/usr/bin/env conductance

var { SystemRoutes,
      ExecutableDirectory,
    } = require('mho:server/routes');
var { Port } = require('mho:server');

//----------------------------------------------------------------------
// Array of ports that conductance will listen on:

var serverConfig = {
  address: Port(7078),
  routes: [
    SystemRoutes(),
    ExecutableDirectory(process.cwd()),
  ]
};

exports.run = function() {
  var helper = require('./helper');
  if (arguments.length == 0) {
    return require('mho:server').run(serverConfig);
  }
  var cutil = require('sjs:cutil');
  var string = require('sjs:string');
  var func = require('sjs:function');

  // integration tests expect a server to be running
  var serverRunning = false, cleanup = -> null;
  var startServer = function() {
    serverRunning = true;
    var ctx = cutil.breaking(brk -> helper.serve(serverConfig, brk));
    cleanup = ctx.resume;
  };

  var init = function(runner) {
    // inherit from runner.reporter, and amend its reporting
    // functions with hooks to start/stop server as necessary
    var reporter = runner.reporter = Object.create(runner.reporter);
    reporter.contextBegin = func.seq(reporter.contextBegin, function(ctx) {
      if (!serverRunning && ctx.module() .. string.startsWith('integration/')) {
        startServer();
      }
    });
    reporter.suiteEnd = func.seq(-> cleanup(), reporter.suiteEnd);
  }

  require('./run.html').run({
    init: init,
  });
}
